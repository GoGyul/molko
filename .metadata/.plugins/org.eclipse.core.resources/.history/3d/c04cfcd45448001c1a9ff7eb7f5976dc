package com.sbs.untact.controller;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sbs.untact.dto.Article;
import com.sbs.untact.util.Util;


@Controller
public class UsrArticleController {

	private int articlesLastId;
	
	private List<Article> articles;
	
	public UsrArticleController() {
		
		articlesLastId = 0;
		
		articles = new ArrayList<Article>();
		
		articles.add(new Article(++articlesLastId, "2020-12-12","2020-12-12", "제목","내용"));
		articles.add(new Article(++articlesLastId, "2020-12-12","2020-12-12", "제목","내용"));
		articles.add(new Article(++articlesLastId, "2020-12-12","2020-12-12", "제목","내용"));
		
		
	}
	
	@RequestMapping("usr/article/detail")
	@ResponseBody
	public Article showDetail(int id) {
		
		return articles.get(id);
	}
	
	@RequestMapping("usr/article/list")
	@ResponseBody
	public List<Article> showList(){
		
		return articles;
		
	}
	
	@RequestMapping("usr/article/doAdd")
	@ResponseBody
	public Map<String, Object> doAdd( String title, String content){
		
		String regDate = Util.getNowDateStr();
		String updateDate = regDate;
		
		articles.add(new Article(++articlesLastId, regDate,updateDate, title, content));
		
		return Util.mapOf("resultCode", "s-1","msg", "성공","id", articlesLastId);

	}
	
	@RequestMapping("usr/article/doDelete")
	@ResponseBody
	public Map<String, Object> doDelete(int id){
		
		boolean deleteArticleRs =  deleteArticle(id);
		
		if(deleteArticleRs) {
			
			return Util.mapOf("resultCode", "s-1","msg", "성공하였습니다.","id", id);

		}else {
			return Util.mapOf("resultCode", "f-1","msg", "해당 게시물은 존재하지 않습니다.");
		}
		
	}
	
	
	private boolean deleteArticle(int id) {
		
		int listSize = articles.size();
		if(id>listSize) {
			return false;
		}else {
			articles.remove(id-1);
			return true;
		}
		
	}
		

	
	@RequestMapping("usr/article/doModify")
	@ResponseBody
	public Map<String, Object> doModify(int id, String title, String content){
		
		Article selArticle = null;
		
		for(Article article : articles ) {
			if(article.getId() == id ) {
				selArticle = article;
				break;
			}
		}
		
		if(selArticle == null) {
			
			return Util.mapOf("resultCode","f-1","msg", String.format("%d번 게시물은 존재하지않습니다.", id));
		}else {
			selArticle.setUpdateDate(Util.getNowDateStr());
			selArticle.setTitle(title);
			selArticle.setContent(content);
			
			return Util.mapOf("resultCode","s-1","msg", String.format("%d번 게시물 수정성공", id));
		}
		
	}
	
}
